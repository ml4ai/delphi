<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ofp version="0.8.4">
  <file path="/Users/hlim1/Research/delphi/delphi/translators/for2py/test_module_11_processed.f">
    <module name="MYMOD11A">
      <header/>
      <module-stmt eos="&#10;" id="MYMOD11A" moduleKeyword="MODULE" rule="1105"/>
      <body>
        <specification declarations="1" implicits="1" imports="0" uses="0">
          <declaration subtype="none" type="implicit"/>
          <declaration type="variable">
            <type hasKind="false" hasLength="false" name="INTEGER">
              <intrinsic-type-spec hasKindSelector="false" keyword1="INTEGER" keyword2="" rule="403" type="400"/>
              <declaration-type-spec rule="502" type="500" udtKeyword=""/>
            </type>
            <variables count="3">
              <variable hasInitialValue="true" name="X">
                <initial-value>
                  <literal type="int" value="123">
                    <int-literal-constant digitString="123" kindParam="" rule="406"/>
                  </literal>
                  <initialization hasExpr="true" hasNullInit="false" rule="506"/>
                </initial-value>
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="true" id="X" rule="503008"/>
              </variable>
              <variable hasInitialValue="true" name="Y">
                <initial-value>
                  <literal type="int" value="234">
                    <int-literal-constant digitString="234" kindParam="" rule="406"/>
                  </literal>
                  <initialization hasExpr="true" hasNullInit="false" rule="506"/>
                </initial-value>
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="true" id="Y" rule="503008"/>
              </variable>
              <variable hasInitialValue="true" name="Z">
                <initial-value>
                  <literal type="int" value="345">
                    <int-literal-constant digitString="345" kindParam="" rule="406"/>
                  </literal>
                  <initialization hasExpr="true" hasNullInit="false" rule="506"/>
                </initial-value>
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="true" id="Z" rule="503008"/>
              </variable>
              <variable/>
            </variables>
            <type-declaration-stmt eos="&#10;" numAttributes="0" rule="501"/>
          </declaration>
          <declaration/>
        </specification>
        <statement/>
      </body>
      <members/>
      <end-module-stmt endKeyword="END" eos="&#10;" id="mymod11a" moduleKeyword="MODULE" rule="1106"/>
    </module>
    <module name="MYMOD11B">
      <header/>
      <module-stmt eos="&#10;" id="MYMOD11B" moduleKeyword="MODULE" rule="1105"/>
      <body>
        <specification declarations="2" implicits="0" imports="0" uses="1">
          <declaration/>
          <use name="MYMOD11A">
            <use-stmt eos="&#10;" hasModuleNature="false" hasOnly="false" hasRenameList="false" id="MYMOD11A" onlyKeyword="" rule="1109" useKeyword="USE"/>
          </use>
          <declaration>
            <access-spec keyword="private" rule="508" type="804"/>
            <name id="Z">
              <generic_spec keyword="" name="Z" rule="1207" type="1500"/>
            </name>
            <access-id rule="519"/>
            <access-id-list addendum="list" count="1" rule="519"/>
            <access-stmt has-access-id-list="true" rule="447"/>
          </declaration>
          <declaration type="variable">
            <type hasKind="false" hasLength="false" name="INTEGER">
              <intrinsic-type-spec hasKindSelector="false" keyword1="INTEGER" keyword2="" rule="403" type="400"/>
              <declaration-type-spec rule="502" type="500" udtKeyword=""/>
            </type>
            <variables count="2">
              <variable hasInitialValue="true" name="U">
                <initial-value>
                  <literal type="int" value="567">
                    <int-literal-constant digitString="567" kindParam="" rule="406"/>
                  </literal>
                  <initialization hasExpr="true" hasNullInit="false" rule="506"/>
                </initial-value>
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="true" id="U" rule="503008"/>
              </variable>
              <variable hasInitialValue="true" name="V">
                <initial-value>
                  <literal type="int" value="678">
                    <int-literal-constant digitString="678" kindParam="" rule="406"/>
                  </literal>
                  <initialization hasExpr="true" hasNullInit="false" rule="506"/>
                </initial-value>
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="true" id="V" rule="503008"/>
              </variable>
              <variable/>
            </variables>
            <type-declaration-stmt eos="&#10;" numAttributes="0" rule="501"/>
          </declaration>
          <declaration/>
        </specification>
        <statement/>
      </body>
      <contains-stmt rule="1237"/>
      <members>
        <subroutine name="print_mymod11b">
          <header>
            <subroutine-stmt hasArgSpecifier="true" hasBindingSpec="false" hasDummyArgList="false" hasPrefix="false" name="print_mymod11b" rule="1232"/>
          </header>
          <body>
            <specification declarations="1" implicits="0" imports="0" uses="0">
              <declaration>
                <format>
                  <label lbl="10" rule="313"/>
                  <format-items count="10">
                    <format-item descOrDigit="'mymod11B: X = '" hasFormatItemList="false" rule="1003"/>
                    <format-item descOrDigit="I3" hasFormatItemList="false" rule="1003"/>
                    <format-item descOrDigit="'; Y = '" hasFormatItemList="false" rule="1003"/>
                    <format-item descOrDigit="I3" hasFormatItemList="false" rule="1003"/>
                    <format-item descOrDigit="'; Z = '" hasFormatItemList="false" rule="1003"/>
                    <format-item descOrDigit="I3" hasFormatItemList="false" rule="1003"/>
                    <format-item descOrDigit="'; U = '" hasFormatItemList="false" rule="1003"/>
                    <format-item descOrDigit="I3" hasFormatItemList="false" rule="1003"/>
                    <format-item descOrDigit="'; V = '" hasFormatItemList="false" rule="1003"/>
                    <format-item descOrDigit="I3" hasFormatItemList="false" rule="1003"/>
                  </format-items>
                </format>
              </declaration>
            </specification>
            <statement>
              <write>
                <io-controls count="2">
                  <io-control argument-name="">
                    <io-control-spec hasAsterisk="true" hasExpression="false" keyword="" rule="913"/>
                  </io-control>
                  <io-control argument-name="">
                    <literal type="int" value="10">
                      <int-literal-constant digitString="10" kindParam="" rule="406"/>
                    </literal>
                    <io-control-spec hasAsterisk="false" hasExpression="true" keyword="" rule="913"/>
                  </io-control>
                </io-controls>
                <outputs count="5">
                  <output>
                    <name hasSubscripts="false" id="X" type="ambiguous">
                      <data-ref numPartRef="1" rule="612"/>
                    </name>
                  </output>
                  <output>
                    <name hasSubscripts="false" id="Y" type="ambiguous">
                      <data-ref numPartRef="1" rule="612"/>
                    </name>
                  </output>
                  <output>
                    <name hasSubscripts="false" id="Z" type="ambiguous">
                      <data-ref numPartRef="1" rule="612"/>
                    </name>
                  </output>
                  <output>
                    <name hasSubscripts="false" id="U" type="ambiguous">
                      <data-ref numPartRef="1" rule="612"/>
                    </name>
                  </output>
                  <output>
                    <name hasSubscripts="false" id="V" type="ambiguous">
                      <data-ref numPartRef="1" rule="612"/>
                    </name>
                  </output>
                </outputs>
                <write-stmt eos="&#10;" hasOutputItemList="true" rule="911" writeKeyword="write"/>
              </write>
            </statement>
            <statement>
              <execution-part rule="208"/>
            </statement>
          </body>
          <end-subroutine-stmt name="print_mymod11b" rule="1234"/>
        </subroutine>
        <module-subprogram hasPrefix="false" rule="1108"/>
        <module-subprogram-part count="1" rule="1107"/>
      </members>
      <end-module-stmt endKeyword="END" eos="&#10;" id="mymod11b" moduleKeyword="MODULE" rule="1106"/>
    </module>
    <module name="MYMOD11C">
      <header/>
      <module-stmt eos="&#10;" id="MYMOD11C" moduleKeyword="MODULE" rule="1105"/>
      <body>
        <specification declarations="2" implicits="0" imports="0" uses="1">
          <declaration/>
          <use name="mymod11B">
            <use-stmt eos="&#10;" hasModuleNature="false" hasOnly="false" hasRenameList="false" id="mymod11B" onlyKeyword="" rule="1109" useKeyword="USE"/>
          </use>
          <declaration>
            <access-spec keyword="PRIVATE" rule="508" type="804"/>
            <name id="Y">
              <generic_spec keyword="" name="Y" rule="1207" type="1500"/>
            </name>
            <access-id rule="519"/>
            <name id="U">
              <generic_spec keyword="" name="U" rule="1207" type="1500"/>
            </name>
            <access-id rule="519"/>
            <access-id-list addendum="list" count="2" rule="519"/>
            <access-stmt has-access-id-list="true" rule="447"/>
          </declaration>
          <declaration type="variable">
            <type hasKind="false" hasLength="false" name="REAL">
              <intrinsic-type-spec hasKindSelector="false" keyword1="REAL" keyword2="" rule="403" type="401"/>
              <declaration-type-spec rule="502" type="500" udtKeyword=""/>
            </type>
            <variables count="1">
              <variable hasInitialValue="true" name="Z">
                <initial-value>
                  <literal type="real" value="12.345">
                    <real-literal-constant kindParam="" realConstant="12.345" rule="417"/>
                  </literal>
                  <initialization hasExpr="true" hasNullInit="false" rule="506"/>
                </initial-value>
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="true" id="Z" rule="503008"/>
              </variable>
              <variable/>
            </variables>
            <type-declaration-stmt eos="&#10;" numAttributes="0" rule="501"/>
          </declaration>
          <declaration/>
        </specification>
        <statement/>
      </body>
      <contains-stmt rule="1237"/>
      <members>
        <subroutine name="print_mymod11c">
          <header>
            <subroutine-stmt hasArgSpecifier="true" hasBindingSpec="false" hasDummyArgList="false" hasPrefix="false" name="print_mymod11c" rule="1232"/>
          </header>
          <body>
            <specification declarations="0" implicits="0" imports="0" uses="0">
              <declaration/>
            </specification>
            <statement>
              <call>
                <name hasSubscripts="true" id="print_mymod11b" type="procedure">
                  <subscripts count="0">
                    <subscript/>
                  </subscripts>
                  <data-ref numPartRef="1" rule="612"/>
                </name>
                <call-stmt callKeyword="call" eos="&#10;" hasActualArgSpecList="false" rule="1218"/>
              </call>
            </statement>
            <statement>
              <format>
                <label lbl="11" rule="313"/>
                <format-items count="10">
                  <format-item descOrDigit="'mymod11C: X = '" hasFormatItemList="false" rule="1003"/>
                  <format-item descOrDigit="I3" hasFormatItemList="false" rule="1003"/>
                  <format-item descOrDigit="'; Y = '" hasFormatItemList="false" rule="1003"/>
                  <format-item descOrDigit="I3" hasFormatItemList="false" rule="1003"/>
                  <format-item descOrDigit="'; Z = '" hasFormatItemList="false" rule="1003"/>
                  <format-item descOrDigit="F8.3" hasFormatItemList="false" rule="1003"/>
                  <format-item descOrDigit="'; U = '" hasFormatItemList="false" rule="1003"/>
                  <format-item descOrDigit="I3" hasFormatItemList="false" rule="1003"/>
                  <format-item descOrDigit="'; V = '" hasFormatItemList="false" rule="1003"/>
                  <format-item descOrDigit="I3" hasFormatItemList="false" rule="1003"/>
                </format-items>
              </format>
              <write>
                <io-controls count="2">
                  <io-control argument-name="">
                    <io-control-spec hasAsterisk="true" hasExpression="false" keyword="" rule="913"/>
                  </io-control>
                  <io-control argument-name="">
                    <literal type="int" value="11">
                      <int-literal-constant digitString="11" kindParam="" rule="406"/>
                    </literal>
                    <io-control-spec hasAsterisk="false" hasExpression="true" keyword="" rule="913"/>
                  </io-control>
                </io-controls>
                <outputs count="5">
                  <output>
                    <name hasSubscripts="false" id="X" type="ambiguous">
                      <data-ref numPartRef="1" rule="612"/>
                    </name>
                  </output>
                  <output>
                    <name hasSubscripts="false" id="Y" type="ambiguous">
                      <data-ref numPartRef="1" rule="612"/>
                    </name>
                  </output>
                  <output>
                    <name hasSubscripts="false" id="Z" type="ambiguous">
                      <data-ref numPartRef="1" rule="612"/>
                    </name>
                  </output>
                  <output>
                    <name hasSubscripts="false" id="U" type="ambiguous">
                      <data-ref numPartRef="1" rule="612"/>
                    </name>
                  </output>
                  <output>
                    <name hasSubscripts="false" id="V" type="ambiguous">
                      <data-ref numPartRef="1" rule="612"/>
                    </name>
                  </output>
                </outputs>
                <write-stmt eos="&#10;" hasOutputItemList="true" rule="911" writeKeyword="WRITE"/>
              </write>
            </statement>
            <statement>
              <execution-part rule="208"/>
            </statement>
          </body>
          <end-subroutine-stmt name="print_mymod11c" rule="1234"/>
        </subroutine>
        <module-subprogram hasPrefix="false" rule="1108"/>
        <module-subprogram-part count="1" rule="1107"/>
      </members>
      <end-module-stmt endKeyword="END" eos="&#10;" id="mymod11C" moduleKeyword="MODULE" rule="1106"/>
    </module>
    <program name="PGM">
      <header/>
      <body>
        <specification declarations="1" implicits="0" imports="0" uses="1">
          <declaration/>
          <use name="mymod11c">
            <use-stmt eos="&#10;" hasModuleNature="false" hasOnly="false" hasRenameList="false" id="mymod11c" onlyKeyword="" rule="1109" useKeyword="USE"/>
          </use>
          <declaration type="variable">
            <type hasKind="false" hasLength="false" name="REAL">
              <intrinsic-type-spec hasKindSelector="false" keyword1="REAL" keyword2="" rule="403" type="401"/>
              <declaration-type-spec rule="502" type="500" udtKeyword=""/>
            </type>
            <variables count="2">
              <variable hasInitialValue="true" name="Y">
                <initial-value>
                  <literal type="real" value="98.765">
                    <real-literal-constant kindParam="" realConstant="98.765" rule="417"/>
                  </literal>
                  <initialization hasExpr="true" hasNullInit="false" rule="506"/>
                </initial-value>
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="true" id="Y" rule="503008"/>
              </variable>
              <variable hasInitialValue="true" name="U">
                <initial-value>
                  <literal type="real" value="87.654">
                    <real-literal-constant kindParam="" realConstant="87.654" rule="417"/>
                  </literal>
                  <initialization hasExpr="true" hasNullInit="false" rule="506"/>
                </initial-value>
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="true" id="U" rule="503008"/>
              </variable>
              <variable/>
            </variables>
            <type-declaration-stmt eos="&#10;" numAttributes="0" rule="501"/>
          </declaration>
          <declaration/>
        </specification>
        <statement>
          <call>
            <name hasSubscripts="true" id="print_mymod11c" type="procedure">
              <subscripts count="0">
                <subscript/>
              </subscripts>
              <data-ref numPartRef="1" rule="612"/>
            </name>
            <call-stmt callKeyword="call" eos="&#10;" hasActualArgSpecList="false" rule="1218"/>
          </call>
        </statement>
        <statement>
          <format>
            <label lbl="10" rule="313"/>
            <format-items count="10">
              <format-item descOrDigit="'pgm main: X = '" hasFormatItemList="false" rule="1003"/>
              <format-item descOrDigit="I3" hasFormatItemList="false" rule="1003"/>
              <format-item descOrDigit="'; Y = '" hasFormatItemList="false" rule="1003"/>
              <format-item descOrDigit="F7.3" hasFormatItemList="false" rule="1003"/>
              <format-item descOrDigit="'; Z = '" hasFormatItemList="false" rule="1003"/>
              <format-item descOrDigit="F7.3" hasFormatItemList="false" rule="1003"/>
              <format-item descOrDigit="'; U = '" hasFormatItemList="false" rule="1003"/>
              <format-item descOrDigit="F7.3" hasFormatItemList="false" rule="1003"/>
              <format-item descOrDigit="'; V = '" hasFormatItemList="false" rule="1003"/>
              <format-item descOrDigit="I3" hasFormatItemList="false" rule="1003"/>
            </format-items>
          </format>
          <write>
            <io-controls count="2">
              <io-control argument-name="">
                <io-control-spec hasAsterisk="true" hasExpression="false" keyword="" rule="913"/>
              </io-control>
              <io-control argument-name="">
                <literal type="int" value="10">
                  <int-literal-constant digitString="10" kindParam="" rule="406"/>
                </literal>
                <io-control-spec hasAsterisk="false" hasExpression="true" keyword="" rule="913"/>
              </io-control>
            </io-controls>
            <outputs count="5">
              <output>
                <name hasSubscripts="false" id="X" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
              <output>
                <name hasSubscripts="false" id="Y" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
              <output>
                <name hasSubscripts="false" id="Z" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
              <output>
                <name hasSubscripts="false" id="U" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
              <output>
                <name hasSubscripts="false" id="V" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
            </outputs>
            <write-stmt eos="&#10;" hasOutputItemList="true" rule="911" writeKeyword="write"/>
          </write>
        </statement>
        <statement>
          <stop code=""/>
        </statement>
        <statement>
          <execution-part rule="208"/>
        </statement>
      </body>
      <end-program-stmt endKeyword="end" eos="&#10;" id="PGM" programKeyword="program" rule="1103"/>
      <main-program hasExecutionPart="true" hasInternalSubprogramPart="false" hasProgramStmt="true" rule="1101"/>
    </program>
  </file>
</ofp>
