<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ofp version="0.8.4">
  <file path="/Users/hlim1/Research/delphi/delphi/translators/for2py/test_module_09_processed.f">
    <module name="MYMOD9">
      <header/>
      <module-stmt eos="&#10;" id="MYMOD9" moduleKeyword="MODULE" rule="1105"/>
      <body>
        <specification declarations="3" implicits="0" imports="0" uses="0">
          <declaration type="variable">
            <type hasKind="false" hasLength="false" name="INTEGER">
              <intrinsic-type-spec hasKindSelector="false" keyword1="INTEGER" keyword2="" rule="403" type="400"/>
              <declaration-type-spec rule="502" type="500" udtKeyword=""/>
            </type>
            <attr-spec attr="815" attrKeyword="PARAMETER" rule="503"/>
            <variables count="10">
              <variable hasInitialValue="true" name="NL">
                <initial-value>
                  <literal type="int" value="20">
                    <int-literal-constant digitString="20" kindParam="" rule="406"/>
                  </literal>
                  <initialization hasExpr="true" hasNullInit="false" rule="506"/>
                </initial-value>
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="true" id="NL" rule="503008"/>
              </variable>
              <variable hasInitialValue="true" name="TS">
                <initial-value>
                  <literal type="int" value="24">
                    <int-literal-constant digitString="24" kindParam="" rule="406"/>
                  </literal>
                  <initialization hasExpr="true" hasNullInit="false" rule="506"/>
                </initial-value>
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="true" id="TS" rule="503008"/>
              </variable>
              <variable hasInitialValue="true" name="NAPPL">
                <initial-value>
                  <literal type="int" value="9000">
                    <int-literal-constant digitString="9000" kindParam="" rule="406"/>
                  </literal>
                  <initialization hasExpr="true" hasNullInit="false" rule="506"/>
                </initial-value>
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="true" id="NAPPL" rule="503008"/>
              </variable>
              <variable hasInitialValue="true" name="NCOHORTS">
                <initial-value>
                  <literal type="int" value="300">
                    <int-literal-constant digitString="300" kindParam="" rule="406"/>
                  </literal>
                  <initialization hasExpr="true" hasNullInit="false" rule="506"/>
                </initial-value>
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="true" id="NCOHORTS" rule="503008"/>
              </variable>
              <variable hasInitialValue="true" name="NELEM">
                <initial-value>
                  <literal type="int" value="3">
                    <int-literal-constant digitString="3" kindParam="" rule="406"/>
                  </literal>
                  <initialization hasExpr="true" hasNullInit="false" rule="506"/>
                </initial-value>
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="true" id="NELEM" rule="503008"/>
              </variable>
              <variable hasInitialValue="true" name="NumOfDays">
                <initial-value>
                  <literal type="int" value="1000">
                    <int-literal-constant digitString="1000" kindParam="" rule="406"/>
                  </literal>
                  <initialization hasExpr="true" hasNullInit="false" rule="506"/>
                </initial-value>
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="true" id="NumOfDays" rule="503008"/>
              </variable>
              <variable hasInitialValue="true" name="NStalks">
                <initial-value>
                  <literal type="int" value="42">
                    <int-literal-constant digitString="42" kindParam="" rule="406"/>
                  </literal>
                  <initialization hasExpr="true" hasNullInit="false" rule="506"/>
                </initial-value>
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="true" id="NStalks" rule="503008"/>
              </variable>
              <variable hasInitialValue="true" name="EvalNum">
                <initial-value>
                  <literal type="int" value="40">
                    <int-literal-constant digitString="40" kindParam="" rule="406"/>
                  </literal>
                  <initialization hasExpr="true" hasNullInit="false" rule="506"/>
                </initial-value>
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="true" id="EvalNum" rule="503008"/>
              </variable>
              <variable hasInitialValue="true" name="MaxFiles">
                <initial-value>
                  <literal type="int" value="500">
                    <int-literal-constant digitString="500" kindParam="" rule="406"/>
                  </literal>
                  <initialization hasExpr="true" hasNullInit="false" rule="506"/>
                </initial-value>
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="true" id="MaxFiles" rule="503008"/>
              </variable>
              <variable hasInitialValue="true" name="MaxPest">
                <initial-value>
                  <literal type="int" value="500">
                    <int-literal-constant digitString="500" kindParam="" rule="406"/>
                  </literal>
                  <initialization hasExpr="true" hasNullInit="false" rule="506"/>
                </initial-value>
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="true" id="MaxPest" rule="503008"/>
              </variable>
              <variable/>
            </variables>
            <type-declaration-stmt eos="&#10;" numAttributes="1" rule="501"/>
          </declaration>
          <declaration type="variable">
            <type hasKind="false" hasLength="false" name="REAL">
              <intrinsic-type-spec hasKindSelector="false" keyword1="REAL" keyword2="" rule="403" type="401"/>
              <declaration-type-spec rule="502" type="500" udtKeyword=""/>
            </type>
            <attr-spec attr="815" attrKeyword="PARAMETER" rule="503"/>
            <variables count="2">
              <variable hasInitialValue="true" name="PI">
                <initial-value>
                  <literal type="real" value="3.14159265">
                    <real-literal-constant kindParam="" realConstant="3.14159265" rule="417"/>
                  </literal>
                  <initialization hasExpr="true" hasNullInit="false" rule="506"/>
                </initial-value>
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="true" id="PI" rule="503008"/>
              </variable>
              <variable hasInitialValue="true" name="RAD">
                <initial-value>
                  <literal type="real" value="0.0174532925">
                    <real-literal-constant kindParam="" realConstant="0.0174532925" rule="417"/>
                  </literal>
                  <initialization hasExpr="true" hasNullInit="false" rule="506"/>
                </initial-value>
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="true" id="RAD" rule="503008"/>
              </variable>
              <variable/>
            </variables>
            <type-declaration-stmt eos="&#10;" numAttributes="1" rule="501"/>
          </declaration>
          <declaration type="variable">
            <type hasKind="false" hasLength="false" name="INTEGER">
              <intrinsic-type-spec hasKindSelector="false" keyword1="INTEGER" keyword2="" rule="403" type="400"/>
              <declaration-type-spec rule="502" type="500" udtKeyword=""/>
            </type>
            <attr-spec attr="815" attrKeyword="PARAMETER" rule="503"/>
            <variables count="5">
              <variable hasInitialValue="true" name="RUNINIT">
                <initial-value>
                  <literal type="int" value="1">
                    <int-literal-constant digitString="1" kindParam="" rule="406"/>
                  </literal>
                  <initialization hasExpr="true" hasNullInit="false" rule="506"/>
                </initial-value>
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="true" id="RUNINIT" rule="503008"/>
              </variable>
              <variable hasInitialValue="true" name="INIT">
                <initial-value>
                  <literal type="int" value="2">
                    <int-literal-constant digitString="2" kindParam="" rule="406"/>
                  </literal>
                  <initialization hasExpr="true" hasNullInit="false" rule="506"/>
                </initial-value>
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="true" id="INIT" rule="503008"/>
              </variable>
              <variable hasInitialValue="true" name="SEASINIT">
                <initial-value>
                  <literal type="int" value="2">
                    <int-literal-constant digitString="2" kindParam="" rule="406"/>
                  </literal>
                  <initialization hasExpr="true" hasNullInit="false" rule="506"/>
                </initial-value>
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="true" id="SEASINIT" rule="503008"/>
              </variable>
              <variable hasInitialValue="true" name="RATE">
                <initial-value>
                  <literal type="int" value="3">
                    <int-literal-constant digitString="3" kindParam="" rule="406"/>
                  </literal>
                  <initialization hasExpr="true" hasNullInit="false" rule="506"/>
                </initial-value>
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="true" id="RATE" rule="503008"/>
              </variable>
              <variable hasInitialValue="true" name="EMERG">
                <initial-value>
                  <literal type="int" value="3">
                    <int-literal-constant digitString="3" kindParam="" rule="406"/>
                  </literal>
                  <initialization hasExpr="true" hasNullInit="false" rule="506"/>
                </initial-value>
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="true" id="EMERG" rule="503008"/>
              </variable>
              <variable/>
            </variables>
            <type-declaration-stmt eos="&#10;" numAttributes="1" rule="501"/>
          </declaration>
          <declaration/>
        </specification>
        <statement/>
      </body>
      <members/>
      <end-module-stmt endKeyword="END" eos="&#10;" id="MYMOD9" moduleKeyword="MODULE" rule="1106"/>
    </module>
    <program name="PGM">
      <header/>
      <body>
        <specification declarations="2" implicits="0" imports="0" uses="1">
          <declaration/>
          <use name="mymod9">
            <use-stmt eos="&#10;" hasModuleNature="false" hasOnly="false" hasRenameList="false" id="mymod9" onlyKeyword="" rule="1109" useKeyword="USE"/>
          </use>
          <declaration>
            <format>
              <label lbl="10" rule="313"/>
              <format-items count="1">
                <format-items count="2">
                  <format-item descOrDigit="I6" hasFormatItemList="false" rule="1003"/>
                  <format-item descOrDigit="2X" hasFormatItemList="false" rule="1003"/>
                </format-items>
                <format-item descOrDigit="5" hasFormatItemList="false" rule="1003"/>
              </format-items>
            </format>
            <format>
              <label lbl="15" rule="313"/>
              <format-items count="2">
                <format-items count="2">
                  <format-item descOrDigit="F8.4" hasFormatItemList="false" rule="1003"/>
                  <format-item descOrDigit="X" hasFormatItemList="false" rule="1003"/>
                </format-items>
                <format-item descOrDigit="2" hasFormatItemList="false" rule="1003"/>
                <format-items count="2">
                  <format-item descOrDigit="I3" hasFormatItemList="false" rule="1003"/>
                  <format-item descOrDigit="X" hasFormatItemList="false" rule="1003"/>
                </format-items>
                <format-item descOrDigit="5" hasFormatItemList="false" rule="1003"/>
              </format-items>
            </format>
          </declaration>
        </specification>
        <statement>
          <write>
            <io-controls count="2">
              <io-control argument-name="">
                <io-control-spec hasAsterisk="true" hasExpression="false" keyword="" rule="913"/>
              </io-control>
              <io-control argument-name="">
                <literal type="int" value="10">
                  <int-literal-constant digitString="10" kindParam="" rule="406"/>
                </literal>
                <io-control-spec hasAsterisk="false" hasExpression="true" keyword="" rule="913"/>
              </io-control>
            </io-controls>
            <outputs count="5">
              <output>
                <name hasSubscripts="false" id="NL" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
              <output>
                <name hasSubscripts="false" id="TS" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
              <output>
                <name hasSubscripts="false" id="NAPPL" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
              <output>
                <name hasSubscripts="false" id="NCOHORTS" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
              <output>
                <name hasSubscripts="false" id="NELEM" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
            </outputs>
            <write-stmt eos="&#10;" hasOutputItemList="true" rule="911" writeKeyword="write"/>
          </write>
        </statement>
        <statement>
          <write>
            <io-controls count="2">
              <io-control argument-name="">
                <io-control-spec hasAsterisk="true" hasExpression="false" keyword="" rule="913"/>
              </io-control>
              <io-control argument-name="">
                <literal type="int" value="10">
                  <int-literal-constant digitString="10" kindParam="" rule="406"/>
                </literal>
                <io-control-spec hasAsterisk="false" hasExpression="true" keyword="" rule="913"/>
              </io-control>
            </io-controls>
            <outputs count="5">
              <output>
                <name hasSubscripts="false" id="NumOfDays" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
              <output>
                <name hasSubscripts="false" id="NStalks" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
              <output>
                <name hasSubscripts="false" id="EvalNum" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
              <output>
                <name hasSubscripts="false" id="MaxFiles" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
              <output>
                <name hasSubscripts="false" id="MaxPest" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
            </outputs>
            <write-stmt eos="&#10;" hasOutputItemList="true" rule="911" writeKeyword="write"/>
          </write>
        </statement>
        <statement>
          <write>
            <io-controls count="2">
              <io-control argument-name="">
                <io-control-spec hasAsterisk="true" hasExpression="false" keyword="" rule="913"/>
              </io-control>
              <io-control argument-name="">
                <literal type="int" value="15">
                  <int-literal-constant digitString="15" kindParam="" rule="406"/>
                </literal>
                <io-control-spec hasAsterisk="false" hasExpression="true" keyword="" rule="913"/>
              </io-control>
            </io-controls>
            <outputs count="7">
              <output>
                <name hasSubscripts="false" id="PI" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
              <output>
                <name hasSubscripts="false" id="RAD" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
              <output>
                <name hasSubscripts="false" id="RUNINIT" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
              <output>
                <name hasSubscripts="false" id="INIT" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
              <output>
                <name hasSubscripts="false" id="SEASINIT" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
              <output>
                <name hasSubscripts="false" id="RATE" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
              <output>
                <name hasSubscripts="false" id="EMERG" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
            </outputs>
            <write-stmt eos="&#10;" hasOutputItemList="true" rule="911" writeKeyword="write"/>
          </write>
        </statement>
        <statement>
          <stop code=""/>
        </statement>
        <statement>
          <execution-part rule="208"/>
        </statement>
      </body>
      <end-program-stmt endKeyword="end" eos="&#10;" id="PGM" programKeyword="program" rule="1103"/>
      <main-program hasExecutionPart="true" hasInternalSubprogramPart="false" hasProgramStmt="true" rule="1101"/>
    </program>
  </file>
</ofp>
