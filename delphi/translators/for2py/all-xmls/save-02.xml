<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ofp version="0.8.4">
  <file path="/Users/hlim1/Research/delphi/delphi/translators/for2py/save-02_processed.f">
    <subroutine name="f">
      <header>
        <arguments count="2">
          <argument name="n"/>
          <argument name="x"/>
        </arguments>
        <subroutine-stmt hasArgSpecifier="true" hasBindingSpec="false" hasDummyArgList="true" hasPrefix="false" name="f" rule="1232"/>
      </header>
      <body>
        <specification declarations="2" implicits="1" imports="0" uses="0">
          <declaration subtype="none" type="implicit"/>
          <declaration type="variable">
            <type hasKind="false" hasLength="false" name="integer">
              <intrinsic-type-spec hasKindSelector="false" keyword1="integer" keyword2="" rule="403" type="400"/>
              <declaration-type-spec rule="502" type="500" udtKeyword=""/>
            </type>
            <variables count="3">
              <variable hasInitialValue="false" name="n">
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="false" id="n" rule="503008"/>
              </variable>
              <variable hasInitialValue="false" name="x">
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="false" id="x" rule="503008"/>
              </variable>
              <variable hasInitialValue="false" name="w">
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="false" id="w" rule="503008"/>
              </variable>
              <variable/>
            </variables>
            <type-declaration-stmt eos="&#10;" numAttributes="0" rule="501"/>
          </declaration>
          <declaration>
            <save-stmt hasSavedEntityList="false" rule="543"/>
          </declaration>
          <declaration/>
        </specification>
        <if>
          <header>
            <operation type="multiary">
              <operand>
                <name hasSubscripts="false" id="n" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </operand>
              <operator operator=".eq."/>
              <operand>
                <literal type="int" value="0">
                  <int-literal-constant digitString="0" kindParam="" rule="406"/>
                </literal>
              </operand>
            </operation>
          </header>
          <body>
            <statement>
              <assignment>
                <target>
                  <name hasSubscripts="false" id="w" type="variable">
                    <data-ref numPartRef="1" rule="612"/>
                    <designator hasSubstringRange="false" rule="603"/>
                  </name>
                </target>
                <value>
                  <literal type="int" value="111">
                    <int-literal-constant digitString="111" kindParam="" rule="406"/>
                  </literal>
                </value>
              </assignment>
            </statement>
            <statement/>
          </body>
          <body type="else">
            <statement>
              <assignment>
                <target>
                  <name hasSubscripts="false" id="w" type="variable">
                    <data-ref numPartRef="1" rule="612"/>
                    <designator hasSubstringRange="false" rule="603"/>
                  </name>
                </target>
                <value>
                  <operation type="multiary">
                    <operand>
                      <literal type="int" value="2">
                        <int-literal-constant digitString="2" kindParam="" rule="406"/>
                      </literal>
                    </operand>
                    <operator operator="*"/>
                    <operand>
                      <name hasSubscripts="false" id="w" type="ambiguous">
                        <data-ref numPartRef="1" rule="612"/>
                      </name>
                    </operand>
                  </operation>
                </value>
              </assignment>
            </statement>
            <statement/>
          </body>
        </if>
        <statement>
          <assignment>
            <target>
              <name hasSubscripts="false" id="x" type="variable">
                <data-ref numPartRef="1" rule="612"/>
                <designator hasSubstringRange="false" rule="603"/>
              </name>
            </target>
            <value>
              <name hasSubscripts="false" id="w" type="ambiguous">
                <data-ref numPartRef="1" rule="612"/>
              </name>
            </value>
          </assignment>
        </statement>
        <statement>
          <execution-part rule="208"/>
        </statement>
      </body>
      <end-subroutine-stmt name="f" rule="1234"/>
    </subroutine>
    <subroutine name="g">
      <header>
        <arguments count="2">
          <argument name="n"/>
          <argument name="x"/>
        </arguments>
        <subroutine-stmt hasArgSpecifier="true" hasBindingSpec="false" hasDummyArgList="true" hasPrefix="false" name="g" rule="1232"/>
      </header>
      <body>
        <specification declarations="2" implicits="1" imports="0" uses="0">
          <declaration subtype="none" type="implicit"/>
          <declaration type="variable">
            <type hasKind="false" hasLength="false" name="integer">
              <intrinsic-type-spec hasKindSelector="false" keyword1="integer" keyword2="" rule="403" type="400"/>
              <declaration-type-spec rule="502" type="500" udtKeyword=""/>
            </type>
            <variables count="3">
              <variable hasInitialValue="false" name="n">
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="false" id="n" rule="503008"/>
              </variable>
              <variable hasInitialValue="false" name="x">
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="false" id="x" rule="503008"/>
              </variable>
              <variable hasInitialValue="false" name="w">
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="false" id="w" rule="503008"/>
              </variable>
              <variable/>
            </variables>
            <type-declaration-stmt eos="&#10;" numAttributes="0" rule="501"/>
          </declaration>
          <declaration>
            <save-stmt hasSavedEntityList="false" rule="543"/>
          </declaration>
          <declaration/>
        </specification>
        <if>
          <header>
            <operation type="multiary">
              <operand>
                <name hasSubscripts="false" id="n" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </operand>
              <operator operator=".eq."/>
              <operand>
                <literal type="int" value="0">
                  <int-literal-constant digitString="0" kindParam="" rule="406"/>
                </literal>
              </operand>
            </operation>
          </header>
          <body>
            <statement>
              <assignment>
                <target>
                  <name hasSubscripts="false" id="w" type="variable">
                    <data-ref numPartRef="1" rule="612"/>
                    <designator hasSubstringRange="false" rule="603"/>
                  </name>
                </target>
                <value>
                  <literal type="int" value="999">
                    <int-literal-constant digitString="999" kindParam="" rule="406"/>
                  </literal>
                </value>
              </assignment>
            </statement>
            <statement/>
          </body>
          <body type="else">
            <statement>
              <assignment>
                <target>
                  <name hasSubscripts="false" id="w" type="variable">
                    <data-ref numPartRef="1" rule="612"/>
                    <designator hasSubstringRange="false" rule="603"/>
                  </name>
                </target>
                <value>
                  <operation type="multiary">
                    <operand>
                      <name hasSubscripts="false" id="w" type="ambiguous">
                        <data-ref numPartRef="1" rule="612"/>
                      </name>
                    </operand>
                    <operator operator="/"/>
                    <operand>
                      <literal type="int" value="3">
                        <int-literal-constant digitString="3" kindParam="" rule="406"/>
                      </literal>
                    </operand>
                  </operation>
                </value>
              </assignment>
            </statement>
            <statement/>
          </body>
        </if>
        <statement>
          <assignment>
            <target>
              <name hasSubscripts="false" id="x" type="variable">
                <data-ref numPartRef="1" rule="612"/>
                <designator hasSubstringRange="false" rule="603"/>
              </name>
            </target>
            <value>
              <name hasSubscripts="false" id="w" type="ambiguous">
                <data-ref numPartRef="1" rule="612"/>
              </name>
            </value>
          </assignment>
        </statement>
        <statement>
          <execution-part rule="208"/>
        </statement>
      </body>
      <end-subroutine-stmt name="g" rule="1234"/>
    </subroutine>
    <program name="main">
      <header/>
      <body>
        <specification declarations="1" implicits="1" imports="0" uses="0">
          <declaration subtype="none" type="implicit"/>
          <declaration type="variable">
            <type hasKind="false" hasLength="false" name="integer">
              <intrinsic-type-spec hasKindSelector="false" keyword1="integer" keyword2="" rule="403" type="400"/>
              <declaration-type-spec rule="502" type="500" udtKeyword=""/>
            </type>
            <variables count="2">
              <variable hasInitialValue="false" name="a">
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="false" id="a" rule="503008"/>
              </variable>
              <variable hasInitialValue="false" name="b">
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="false" id="b" rule="503008"/>
              </variable>
              <variable/>
            </variables>
            <type-declaration-stmt eos="&#10;" numAttributes="0" rule="501"/>
          </declaration>
          <declaration/>
        </specification>
        <statement>
          <call>
            <name hasSubscripts="true" id="f" type="procedure">
              <subscripts count="2">
                <subscript type="simple">
                  <literal type="int" value="0">
                    <int-literal-constant digitString="0" kindParam="" rule="406"/>
                  </literal>
                </subscript>
                <subscript type="simple">
                  <name hasSubscripts="false" id="a" type="ambiguous">
                    <data-ref numPartRef="1" rule="612"/>
                  </name>
                </subscript>
                <subscript/>
              </subscripts>
              <data-ref numPartRef="1" rule="612"/>
            </name>
            <call-stmt callKeyword="call" eos="&#10;" hasActualArgSpecList="false" rule="1218"/>
          </call>
        </statement>
        <statement>
          <call>
            <name hasSubscripts="true" id="g" type="procedure">
              <subscripts count="2">
                <subscript type="simple">
                  <literal type="int" value="0">
                    <int-literal-constant digitString="0" kindParam="" rule="406"/>
                  </literal>
                </subscript>
                <subscript type="simple">
                  <name hasSubscripts="false" id="b" type="ambiguous">
                    <data-ref numPartRef="1" rule="612"/>
                  </name>
                </subscript>
                <subscript/>
              </subscripts>
              <data-ref numPartRef="1" rule="612"/>
            </name>
            <call-stmt callKeyword="call" eos="&#10;" hasActualArgSpecList="false" rule="1218"/>
          </call>
        </statement>
        <statement>
          <format>
            <label lbl="10" rule="313"/>
            <format-items count="4">
              <format-item descOrDigit="&quot;a = &quot;" hasFormatItemList="false" rule="1003"/>
              <format-item descOrDigit="I5" hasFormatItemList="false" rule="1003"/>
              <format-item descOrDigit="&quot;;   b = &quot;" hasFormatItemList="false" rule="1003"/>
              <format-item descOrDigit="I5" hasFormatItemList="false" rule="1003"/>
            </format-items>
          </format>
          <write>
            <io-controls count="2">
              <io-control argument-name="">
                <io-control-spec hasAsterisk="true" hasExpression="false" keyword="" rule="913"/>
              </io-control>
              <io-control argument-name="">
                <literal type="int" value="10">
                  <int-literal-constant digitString="10" kindParam="" rule="406"/>
                </literal>
                <io-control-spec hasAsterisk="false" hasExpression="true" keyword="" rule="913"/>
              </io-control>
            </io-controls>
            <outputs count="2">
              <output>
                <name hasSubscripts="false" id="a" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
              <output>
                <name hasSubscripts="false" id="b" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
            </outputs>
            <write-stmt eos="&#10;" hasOutputItemList="true" rule="911" writeKeyword="write"/>
          </write>
        </statement>
        <statement>
          <call>
            <name hasSubscripts="true" id="f" type="procedure">
              <subscripts count="2">
                <subscript type="simple">
                  <literal type="int" value="1">
                    <int-literal-constant digitString="1" kindParam="" rule="406"/>
                  </literal>
                </subscript>
                <subscript type="simple">
                  <name hasSubscripts="false" id="a" type="ambiguous">
                    <data-ref numPartRef="1" rule="612"/>
                  </name>
                </subscript>
                <subscript/>
              </subscripts>
              <data-ref numPartRef="1" rule="612"/>
            </name>
            <call-stmt callKeyword="call" eos="&#10;" hasActualArgSpecList="false" rule="1218"/>
          </call>
        </statement>
        <statement>
          <call>
            <name hasSubscripts="true" id="g" type="procedure">
              <subscripts count="2">
                <subscript type="simple">
                  <literal type="int" value="1">
                    <int-literal-constant digitString="1" kindParam="" rule="406"/>
                  </literal>
                </subscript>
                <subscript type="simple">
                  <name hasSubscripts="false" id="b" type="ambiguous">
                    <data-ref numPartRef="1" rule="612"/>
                  </name>
                </subscript>
                <subscript/>
              </subscripts>
              <data-ref numPartRef="1" rule="612"/>
            </name>
            <call-stmt callKeyword="call" eos="&#10;" hasActualArgSpecList="false" rule="1218"/>
          </call>
        </statement>
        <statement>
          <write>
            <io-controls count="2">
              <io-control argument-name="">
                <io-control-spec hasAsterisk="true" hasExpression="false" keyword="" rule="913"/>
              </io-control>
              <io-control argument-name="">
                <literal type="int" value="10">
                  <int-literal-constant digitString="10" kindParam="" rule="406"/>
                </literal>
                <io-control-spec hasAsterisk="false" hasExpression="true" keyword="" rule="913"/>
              </io-control>
            </io-controls>
            <outputs count="2">
              <output>
                <name hasSubscripts="false" id="a" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
              <output>
                <name hasSubscripts="false" id="b" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
            </outputs>
            <write-stmt eos="&#10;" hasOutputItemList="true" rule="911" writeKeyword="write"/>
          </write>
        </statement>
        <statement>
          <call>
            <name hasSubscripts="true" id="f" type="procedure">
              <subscripts count="2">
                <subscript type="simple">
                  <literal type="int" value="1">
                    <int-literal-constant digitString="1" kindParam="" rule="406"/>
                  </literal>
                </subscript>
                <subscript type="simple">
                  <name hasSubscripts="false" id="a" type="ambiguous">
                    <data-ref numPartRef="1" rule="612"/>
                  </name>
                </subscript>
                <subscript/>
              </subscripts>
              <data-ref numPartRef="1" rule="612"/>
            </name>
            <call-stmt callKeyword="call" eos="&#10;" hasActualArgSpecList="false" rule="1218"/>
          </call>
        </statement>
        <statement>
          <call>
            <name hasSubscripts="true" id="g" type="procedure">
              <subscripts count="2">
                <subscript type="simple">
                  <literal type="int" value="1">
                    <int-literal-constant digitString="1" kindParam="" rule="406"/>
                  </literal>
                </subscript>
                <subscript type="simple">
                  <name hasSubscripts="false" id="b" type="ambiguous">
                    <data-ref numPartRef="1" rule="612"/>
                  </name>
                </subscript>
                <subscript/>
              </subscripts>
              <data-ref numPartRef="1" rule="612"/>
            </name>
            <call-stmt callKeyword="call" eos="&#10;" hasActualArgSpecList="false" rule="1218"/>
          </call>
        </statement>
        <statement>
          <write>
            <io-controls count="2">
              <io-control argument-name="">
                <io-control-spec hasAsterisk="true" hasExpression="false" keyword="" rule="913"/>
              </io-control>
              <io-control argument-name="">
                <literal type="int" value="10">
                  <int-literal-constant digitString="10" kindParam="" rule="406"/>
                </literal>
                <io-control-spec hasAsterisk="false" hasExpression="true" keyword="" rule="913"/>
              </io-control>
            </io-controls>
            <outputs count="2">
              <output>
                <name hasSubscripts="false" id="a" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
              <output>
                <name hasSubscripts="false" id="b" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
            </outputs>
            <write-stmt eos="&#10;" hasOutputItemList="true" rule="911" writeKeyword="write"/>
          </write>
        </statement>
        <statement>
          <stop code=""/>
        </statement>
        <statement>
          <execution-part rule="208"/>
        </statement>
      </body>
      <end-program-stmt endKeyword="end" eos="&#10;" id="main" programKeyword="program" rule="1103"/>
      <main-program hasExecutionPart="true" hasInternalSubprogramPart="false" hasProgramStmt="true" rule="1101"/>
    </program>
  </file>
</ofp>
