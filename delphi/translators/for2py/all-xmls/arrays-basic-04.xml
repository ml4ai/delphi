<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ofp version="0.8.4">
  <file path="/Users/hlim1/Research/delphi/delphi/translators/for2py/arrays-basic-04_processed.f">
    <program name="main">
      <header/>
      <body>
        <specification declarations="2" implicits="1" imports="0" uses="0">
          <declaration subtype="none" type="implicit"/>
          <declaration type="variable">
            <type hasKind="false" hasLength="false" name="integer">
              <intrinsic-type-spec hasKindSelector="false" keyword1="integer" keyword2="" rule="403" type="400"/>
              <declaration-type-spec rule="502" type="500" udtKeyword=""/>
            </type>
            <dimensions count="2">
              <dimension type="simple">
                <literal type="int" value="5">
                  <int-literal-constant digitString="5" kindParam="" rule="406"/>
                </literal>
                <array-spec-element rule="510" type="700"/>
              </dimension>
              <dimension type="simple">
                <literal type="int" value="5">
                  <int-literal-constant digitString="5" kindParam="" rule="406"/>
                </literal>
                <array-spec-element rule="510" type="700"/>
              </dimension>
            </dimensions>
            <attr-spec attr="809" attrKeyword="dimension" rule="503"/>
            <variables count="1">
              <variable hasInitialValue="false" name="arr">
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="false" id="arr" rule="503008"/>
              </variable>
              <variable/>
            </variables>
            <type-declaration-stmt eos="&#10;" numAttributes="1" rule="501"/>
          </declaration>
          <declaration type="variable">
            <type hasKind="false" hasLength="false" name="integer">
              <intrinsic-type-spec hasKindSelector="false" keyword1="integer" keyword2="" rule="403" type="400"/>
              <declaration-type-spec rule="502" type="500" udtKeyword=""/>
            </type>
            <variables count="2">
              <variable hasInitialValue="false" name="i">
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="false" id="i" rule="503008"/>
              </variable>
              <variable hasInitialValue="false" name="j">
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="false" id="j" rule="503008"/>
              </variable>
              <variable/>
            </variables>
            <type-declaration-stmt eos="&#10;" numAttributes="0" rule="501"/>
          </declaration>
          <declaration/>
        </specification>
        <statement>
          <open>
            <keyword-arguments count="3">
              <keyword-argument argument-name="">
                <literal type="int" value="10">
                  <int-literal-constant digitString="10" kindParam="" rule="406"/>
                </literal>
              </keyword-argument>
              <keyword-argument argument-name="FILE">
                <literal type="char" value="&quot;OUTPUT&quot;">
                  <char-literal-constant digitString-kind-param="" identifier-kind-param="" rule="427" str="&quot;OUTPUT&quot;"/>
                </literal>
              </keyword-argument>
              <keyword-argument argument-name="STATUS">
                <literal type="char" value="&quot;REPLACE&quot;">
                  <char-literal-constant digitString-kind-param="" identifier-kind-param="" rule="427" str="&quot;REPLACE&quot;"/>
                </literal>
              </keyword-argument>
              <keyword-argument/>
            </keyword-arguments>
            <open-stmt eos="&#10;" openKeyword="open" rule="904"/>
          </open>
        </statement>
        <loop type="do">
          <header>
            <index-variable name="i">
              <do-variable id="i" rule="831"/>
              <lower-bound>
                <literal type="int" value="1">
                  <int-literal-constant digitString="1" kindParam="" rule="406"/>
                </literal>
              </lower-bound>
              <upper-bound>
                <literal type="int" value="5">
                  <int-literal-constant digitString="5" kindParam="" rule="406"/>
                </literal>
              </upper-bound>
            </index-variable>
            <loop-control doConstructType="1701" hasOptExpr="false" rule="818008" whileKeyword=""/>
          </header>
          <do-stmt digitString="" doKeyword="do" eos="&#10;" hasLoopControl="true" id="" rule="827"/>
          <body>
            <loop type="do">
              <header>
                <index-variable name="j">
                  <do-variable id="j" rule="831"/>
                  <lower-bound>
                    <literal type="int" value="1">
                      <int-literal-constant digitString="1" kindParam="" rule="406"/>
                    </literal>
                  </lower-bound>
                  <upper-bound>
                    <literal type="int" value="5">
                      <int-literal-constant digitString="5" kindParam="" rule="406"/>
                    </literal>
                  </upper-bound>
                </index-variable>
                <loop-control doConstructType="1701" hasOptExpr="false" rule="818008" whileKeyword=""/>
              </header>
              <do-stmt digitString="" doKeyword="do" eos="&#10;" hasLoopControl="true" id="" rule="827"/>
              <body>
                <statement>
                  <assignment>
                    <target>
                      <name hasSubscripts="true" id="arr" type="variable">
                        <subscripts count="2">
                          <subscript type="simple">
                            <name hasSubscripts="false" id="i" type="ambiguous">
                              <data-ref numPartRef="1" rule="612"/>
                            </name>
                          </subscript>
                          <subscript type="simple">
                            <name hasSubscripts="false" id="j" type="ambiguous">
                              <data-ref numPartRef="1" rule="612"/>
                            </name>
                          </subscript>
                          <subscript/>
                        </subscripts>
                        <data-ref numPartRef="1" rule="612"/>
                        <designator hasSubstringRange="false" rule="603"/>
                      </name>
                    </target>
                    <value>
                      <operation type="multiary">
                        <operand>
                          <name hasSubscripts="false" id="i" type="ambiguous">
                            <data-ref numPartRef="1" rule="612"/>
                          </name>
                        </operand>
                        <operator operator="+"/>
                        <operand>
                          <name hasSubscripts="false" id="j" type="ambiguous">
                            <data-ref numPartRef="1" rule="612"/>
                          </name>
                        </operand>
                      </operation>
                    </value>
                  </assignment>
                </statement>
                <statement/>
              </body>
            </loop>
            <statement/>
          </body>
        </loop>
        <loop type="do">
          <header>
            <index-variable name="i">
              <do-variable id="i" rule="831"/>
              <lower-bound>
                <literal type="int" value="1">
                  <int-literal-constant digitString="1" kindParam="" rule="406"/>
                </literal>
              </lower-bound>
              <upper-bound>
                <literal type="int" value="5">
                  <int-literal-constant digitString="5" kindParam="" rule="406"/>
                </literal>
              </upper-bound>
            </index-variable>
            <loop-control doConstructType="1701" hasOptExpr="false" rule="818008" whileKeyword=""/>
          </header>
          <do-stmt digitString="" doKeyword="do" eos="&#10;" hasLoopControl="true" id="" rule="827"/>
          <body>
            <statement>
              <write>
                <io-controls count="2">
                  <io-control argument-name="">
                    <literal type="int" value="10">
                      <int-literal-constant digitString="10" kindParam="" rule="406"/>
                    </literal>
                    <io-control-spec hasAsterisk="false" hasExpression="true" keyword="" rule="913"/>
                  </io-control>
                  <io-control argument-name="">
                    <literal type="int" value="10">
                      <int-literal-constant digitString="10" kindParam="" rule="406"/>
                    </literal>
                    <io-control-spec hasAsterisk="false" hasExpression="true" keyword="" rule="913"/>
                  </io-control>
                </io-controls>
                <outputs count="5">
                  <output>
                    <name hasSubscripts="true" id="arr" type="ambiguous">
                      <subscripts count="2">
                        <subscript type="simple">
                          <name hasSubscripts="false" id="i" type="ambiguous">
                            <data-ref numPartRef="1" rule="612"/>
                          </name>
                        </subscript>
                        <subscript type="simple">
                          <literal type="int" value="1">
                            <int-literal-constant digitString="1" kindParam="" rule="406"/>
                          </literal>
                        </subscript>
                        <subscript/>
                      </subscripts>
                      <data-ref numPartRef="1" rule="612"/>
                    </name>
                  </output>
                  <output>
                    <name hasSubscripts="true" id="arr" type="ambiguous">
                      <subscripts count="2">
                        <subscript type="simple">
                          <name hasSubscripts="false" id="i" type="ambiguous">
                            <data-ref numPartRef="1" rule="612"/>
                          </name>
                        </subscript>
                        <subscript type="simple">
                          <literal type="int" value="2">
                            <int-literal-constant digitString="2" kindParam="" rule="406"/>
                          </literal>
                        </subscript>
                        <subscript/>
                      </subscripts>
                      <data-ref numPartRef="1" rule="612"/>
                    </name>
                  </output>
                  <output>
                    <name hasSubscripts="true" id="arr" type="ambiguous">
                      <subscripts count="2">
                        <subscript type="simple">
                          <name hasSubscripts="false" id="i" type="ambiguous">
                            <data-ref numPartRef="1" rule="612"/>
                          </name>
                        </subscript>
                        <subscript type="simple">
                          <literal type="int" value="3">
                            <int-literal-constant digitString="3" kindParam="" rule="406"/>
                          </literal>
                        </subscript>
                        <subscript/>
                      </subscripts>
                      <data-ref numPartRef="1" rule="612"/>
                    </name>
                  </output>
                  <output>
                    <name hasSubscripts="true" id="arr" type="ambiguous">
                      <subscripts count="2">
                        <subscript type="simple">
                          <name hasSubscripts="false" id="i" type="ambiguous">
                            <data-ref numPartRef="1" rule="612"/>
                          </name>
                        </subscript>
                        <subscript type="simple">
                          <literal type="int" value="4">
                            <int-literal-constant digitString="4" kindParam="" rule="406"/>
                          </literal>
                        </subscript>
                        <subscript/>
                      </subscripts>
                      <data-ref numPartRef="1" rule="612"/>
                    </name>
                  </output>
                  <output>
                    <name hasSubscripts="true" id="arr" type="ambiguous">
                      <subscripts count="2">
                        <subscript type="simple">
                          <name hasSubscripts="false" id="i" type="ambiguous">
                            <data-ref numPartRef="1" rule="612"/>
                          </name>
                        </subscript>
                        <subscript type="simple">
                          <literal type="int" value="5">
                            <int-literal-constant digitString="5" kindParam="" rule="406"/>
                          </literal>
                        </subscript>
                        <subscript/>
                      </subscripts>
                      <data-ref numPartRef="1" rule="612"/>
                    </name>
                  </output>
                </outputs>
                <write-stmt eos="&#10;" hasOutputItemList="true" rule="911" writeKeyword="write"/>
              </write>
            </statement>
            <statement/>
          </body>
        </loop>
        <statement>
          <format>
            <label lbl="10" rule="313"/>
            <format-items count="1">
              <format-items count="2">
                <format-item descOrDigit="I5" hasFormatItemList="false" rule="1003"/>
                <format-item descOrDigit="X" hasFormatItemList="false" rule="1003"/>
              </format-items>
              <format-item descOrDigit="5" hasFormatItemList="false" rule="1003"/>
            </format-items>
          </format>
          <stop code=""/>
        </statement>
        <statement>
          <execution-part rule="208"/>
        </statement>
      </body>
      <end-program-stmt endKeyword="end" eos="&#10;" id="main" programKeyword="program" rule="1103"/>
      <main-program hasExecutionPart="true" hasInternalSubprogramPart="false" hasProgramStmt="true" rule="1101"/>
    </program>
  </file>
</ofp>
