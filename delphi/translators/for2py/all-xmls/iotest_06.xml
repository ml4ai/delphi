<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ofp version="0.8.4">
  <file path="/Users/hlim1/Research/delphi/delphi/translators/for2py/iotest_06_processed.for">
    <program name="M">
      <header/>
      <body>
        <specification declarations="2" implicits="1" imports="0" uses="0">
          <declaration subtype="none" type="implicit"/>
          <declaration type="variable">
            <type hasKind="false" hasLength="false" name="REAL">
              <intrinsic-type-spec hasKindSelector="false" keyword1="REAL" keyword2="" rule="403" type="401"/>
              <declaration-type-spec rule="502" type="500" udtKeyword=""/>
            </type>
            <variables count="2">
              <variable hasInitialValue="false" name="X">
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="false" id="X" rule="503008"/>
              </variable>
              <variable hasInitialValue="false" name="Y">
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="false" id="Y" rule="503008"/>
              </variable>
              <variable/>
            </variables>
            <type-declaration-stmt eos="&#10;" numAttributes="0" rule="501"/>
          </declaration>
          <declaration type="variable">
            <type hasKind="false" hasLength="false" name="INTEGER">
              <intrinsic-type-spec hasKindSelector="false" keyword1="INTEGER" keyword2="" rule="403" type="400"/>
              <declaration-type-spec rule="502" type="500" udtKeyword=""/>
            </type>
            <variables count="1">
              <variable hasInitialValue="false" name="Z">
                <entity-decl hasArraySpec="false" hasCharLength="false" hasCoarraySpec="false" hasInitialization="false" id="Z" rule="503008"/>
              </variable>
              <variable/>
            </variables>
            <type-declaration-stmt eos="&#10;" numAttributes="0" rule="501"/>
          </declaration>
          <declaration/>
        </specification>
        <statement>
          <assignment>
            <target>
              <name hasSubscripts="false" id="X" type="variable">
                <data-ref numPartRef="1" rule="612"/>
                <designator hasSubstringRange="false" rule="603"/>
              </name>
            </target>
            <value>
              <literal type="real" value="123.456">
                <real-literal-constant kindParam="" realConstant="123.456" rule="417"/>
              </literal>
            </value>
          </assignment>
        </statement>
        <statement>
          <assignment>
            <target>
              <name hasSubscripts="false" id="Z" type="variable">
                <data-ref numPartRef="1" rule="612"/>
                <designator hasSubstringRange="false" rule="603"/>
              </name>
            </target>
            <value>
              <literal type="int" value="12">
                <int-literal-constant digitString="12" kindParam="" rule="406"/>
              </literal>
            </value>
          </assignment>
        </statement>
        <statement>
          <assignment>
            <target>
              <name hasSubscripts="false" id="Y" type="variable">
                <data-ref numPartRef="1" rule="612"/>
                <designator hasSubstringRange="false" rule="603"/>
              </name>
            </target>
            <value>
              <operation type="multiary">
                <operand>
                  <name hasSubscripts="false" id="X" type="ambiguous">
                    <data-ref numPartRef="1" rule="612"/>
                  </name>
                </operand>
                <operator operator="*"/>
                <operand>
                  <name hasSubscripts="false" id="Z" type="ambiguous">
                    <data-ref numPartRef="1" rule="612"/>
                  </name>
                </operand>
              </operation>
            </value>
          </assignment>
        </statement>
        <statement>
          <write>
            <io-controls count="2">
              <io-control argument-name="">
                <io-control-spec hasAsterisk="true" hasExpression="false" keyword="" rule="913"/>
              </io-control>
              <io-control argument-name="">
                <io-control-spec hasAsterisk="true" hasExpression="false" keyword="" rule="913"/>
              </io-control>
            </io-controls>
            <outputs count="3">
              <output>
                <name hasSubscripts="false" id="X" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
              <output>
                <name hasSubscripts="false" id="Y" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
              <output>
                <name hasSubscripts="false" id="Z" type="ambiguous">
                  <data-ref numPartRef="1" rule="612"/>
                </name>
              </output>
            </outputs>
            <write-stmt eos="&#10;" hasOutputItemList="true" rule="911" writeKeyword="WRITE"/>
          </write>
        </statement>
        <statement>
          <stop code=""/>
        </statement>
        <statement>
          <execution-part rule="208"/>
        </statement>
      </body>
      <end-program-stmt endKeyword="END" eos="&#10;" id="M" programKeyword="PROGRAM" rule="1103"/>
      <main-program hasExecutionPart="true" hasInternalSubprogramPart="false" hasProgramStmt="true" rule="1101"/>
    </program>
  </file>
</ofp>
