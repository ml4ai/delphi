#pragma once

#include <nlohmann/json.hpp>

using namespace std;
using json = nlohmann::json;

// Read config file for user-set parameters
class Config {
  public:
    Config();
    ~Config(){}

    int get_training_stopping_sample_interval();
    int get_training_burn();
    string get_log_filename();
    double get_training_stopping_min_log_likelihood_delta ();

  private:
    // this path presumes delphi running from the build directory.
    const string DEFAULT_FILENAME = "../config.json";
    const string DEFAULT_LOG_FILENAME = "../logfile.txt";
    const int DEFAULT_TRAINING_STOPPING_SAMPLE_INTERVAL = 200;
    const int DEFAULT_TRAINING_BURN = 1000;
    const double DEFAULT_TRAINING_STOPPING_MIN_LOG_LIKELIHOOD_DELTA = 0.0;

    const string JSON_TRAINING_STOPPING_MIN_LOG_LIKELIHOOD_DELTA = 
      "training_stopping_min_log_likelihood_delta";
    const string JSON_TRAINING_STOPPING_SAMPLE_INTERVAL = 
      "training_stopping_sample_interval";
    const string JSON_TRAINING_BURN = "training_burn";
    const string JSON_LOG_FILENAME = "logfile_name";

    void init();
    string filename = DEFAULT_FILENAME;
    string log_filename = DEFAULT_LOG_FILENAME;
    json read_config();
    int training_stopping_sample_interval = DEFAULT_TRAINING_STOPPING_SAMPLE_INTERVAL;
    int training_burn = DEFAULT_TRAINING_BURN;
    double training_stopping_min_log_likelihood_delta = 
      DEFAULT_TRAINING_STOPPING_MIN_LOG_LIKELIHOOD_DELTA;
};
