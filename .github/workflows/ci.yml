# Workflow for continuous integration and testing

name: Continuous Integration

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    if: github.repository == 'ml4ai/delphi'
    strategy:
      matrix:
        os: [ubuntu-20.04]


    steps:
    - uses: actions/checkout@v2

    - name: Continuous Integration
      env:
        DELPHI_DB: /tmp/delphi.db
      run: |
        sudo apt-get update
        sudo apt-get install -y\
            libboost-all-dev\
            pkg-config\
            cmake\
            curl\
            git\
            tar\
            wget\
            python3-dev\
            python3-venv\
            graphviz\
            libgraphviz-dev\
            libsqlite3-dev\
            libeigen3-dev\
            pybind11-dev\
            libfmt-dev\
            librange-v3-dev\
            nlohmann-json3-dev

        echo "### Building Served from source"
        pwd

        sudo git clone https://github.com/meltwater/served
        cd served
        mkdir build
        cd build
        cmake ..
        make -j `nproc` install
        cd ../..

        echo "### Done Building Served from source"
        echo "### Building WM"
        pwd

        sudo python3 -m venv delphi_venv
        source delphi_venv/bin/activate
        sudo mkdir -p data && curl http://vanga.sista.arizona.edu/delphi_data/delphi.db -o $DELPHI_DB
        sudo pip install wheel
        sudo pip install -e .[test]
        sudo make test_wm

        echo "### Done building WM"
        pwd
